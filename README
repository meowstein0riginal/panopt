# Tworzenie projektu



## Utwórz katalog dla porjektu

mkdir nazwa_projektu


## utwórz wirtualne środowisko

python -m venv venv --prompt nazwa(środowiska)


## aktywuj wirtualne sordowisko

linux
source venv/bin/activatate

windows
venv\Scripts\activate


## instalacja django

pip install django


## Utworzenie requirements
pip freeze > requirements.txt
tworzy plik wersjami wykorzystywanych bibliotek, który można na innym komputerze wykorzystać do skonfigurowania wirt. środowiska komendą:
pip install -r requirements.txt


## utworzenie projektu

np. polecenie:
django-admin startproject nazwa

utworzy

nazwa
    nazwa
        settings.py
        ...
    manage.py

a polecenie:
django-admin startproject nazwa .

nazwa
    settings.py
    ...
manage.py

## uruchomienie projektu

python manage.py runserver

## inicjacja repozytorium
pop utworzeniu repozytorium na github jest tam link do skopiowania, jak:
git remote add origin https://github.com/meowstein0riginal/panopt.git

potem w głównym katalogu projektu robimy plik tekstowy .gitignore a w treści
.idea
db.sqlite3
venv
__pycache__


potem możemy sprawdzić za pomocą
git status

potem
git add .
git status

potem
git commit -m initial

potem
git push origin master


## utworzenie projektu heroku

heroku create (losowa nazwa)

lub

heroku create nazwa


### Utwórz plik (zwykly) Procfile

w pliku wpisujemy:
web: python manage.py runserver 0.0.0.0:$PORT

### zainstaluj django heroku (np. do requirements dopisać django-heroku a potem komenda pip install -r requirements.txt

### konfiguracja django-heroku (w pliku settings dopisać:)
import django_heroku
django_heroku.settings(locals())

### w pliku settings dodajemy:
import os
i w secret key modyfikujemy linijkę żeby wyglądało tak jak poniżej:
SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", 'django-insecure-+@knkf+k6!)x+od2bjgimvr*z29%3==z5g1afe$cs&@3+(1831')

### utworzymy plik .env

w nim tworzymy SECRET_KEY=jakiś losowy ciąg znaków

### ustawiamy smienną środowiskową na heroku(wpisujemy w terminalu:)

heroku config:set SECRET_KEY=ciagznakow(ten utworzony w pliku env)


### dodanie zmian i commit

git add .
git commit -m "message"

### wypchnięcie do heroku

git push heroku master

### heroku addons

pokazuje dodatki

### heroku run python manage.py shell

heroku run
# po tej komendzie działamy  globalnie, na serwerze heroku. inaczej działalibyśmy lokalnie na swoim komputerze.
na przykład z poziomu wirt. środowiska wpisujemy:
heroku run python manage.py migrate
to była migracja wykonana ręcznie, żeby była automatyczna dopisaliśmy drugi wiersz do pliku Procfile


### przejście w tryb tymczasowej niedostępności strony:
heroku maintenance:on

### tworzenie superusera
heroku run python manage.py createsuperuser


### by nie było bledu CSRF trzeba dodac adres naszej apki do pliku settings
ale musi być przed import django_heroku

CSRF_TRUSTED_ORIGINS = ["https://murmuring-plains-12770.herokuapp.com/"]